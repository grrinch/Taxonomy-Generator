/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import helper.FileChooserHelper;
import helper.SysP;
import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author radmin
 */
public class Generator extends javax.swing.JFrame {

    /**
     * Creates new form Generator
     */
    public Generator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graphObjectsPlacement = new javax.swing.ButtonGroup();
        rightElementsGridPanel = new javax.swing.JPanel();
        attribPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        atributesList = new javax.swing.JList();
        graphPropertiesPanel = new javax.swing.JPanel();
        graphLinesCrossing = new javax.swing.JRadioButton();
        graphLinesNotCrossing = new javax.swing.JRadioButton();
        propertyPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        propertiesList = new javax.swing.JList();
        combineAttribs = new javax.swing.JButton();
        openSaveButtonPanel = new javax.swing.JPanel();
        openButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        leftChartPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test");
        setName("MainFrame"); // NOI18N

        rightElementsGridPanel.setLayout(new java.awt.BorderLayout(0, 5));

        attribPanel.setLayout(new java.awt.BorderLayout());

        atributesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        atributesList.setName("atributesList"); // NOI18N
        jScrollPane3.setViewportView(atributesList);
        atributesList.getAccessibleContext().setAccessibleName("atributesList");

        attribPanel.add(jScrollPane3, java.awt.BorderLayout.NORTH);

        graphPropertiesPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        graphPropertiesPanel.setLayout(new java.awt.BorderLayout());

        graphObjectsPlacement.add(graphLinesCrossing);
        graphLinesCrossing.setText("Cross");
        graphLinesCrossing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphLinesCrossingActionPerformed(evt);
            }
        });
        graphPropertiesPanel.add(graphLinesCrossing, java.awt.BorderLayout.EAST);
        graphLinesCrossing.getAccessibleContext().setAccessibleName("graphLinesCrossing");

        graphObjectsPlacement.add(graphLinesNotCrossing);
        graphLinesNotCrossing.setSelected(true);
        graphLinesNotCrossing.setText("Don't cross");
        graphPropertiesPanel.add(graphLinesNotCrossing, java.awt.BorderLayout.WEST);

        attribPanel.add(graphPropertiesPanel, java.awt.BorderLayout.SOUTH);

        rightElementsGridPanel.add(attribPanel, java.awt.BorderLayout.PAGE_END);

        propertyPanel.setLayout(new java.awt.BorderLayout());

        propertiesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        propertiesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        propertiesList.setToolTipText("Właściwości obiektu");
        propertiesList.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        propertiesList.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                propertiesListPropertyChange(evt);
            }
        });
        jScrollPane4.setViewportView(propertiesList);

        propertyPanel.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        combineAttribs.setText("Combine Properties");
        propertyPanel.add(combineAttribs, java.awt.BorderLayout.SOUTH);

        openSaveButtonPanel.setLayout(new java.awt.GridLayout());

        openButton.setText("Open");
        openButton.setToolTipText("");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });
        openSaveButtonPanel.add(openButton);

        saveButton.setText("Save");
        openSaveButtonPanel.add(saveButton);

        propertyPanel.add(openSaveButtonPanel, java.awt.BorderLayout.PAGE_START);

        rightElementsGridPanel.add(propertyPanel, java.awt.BorderLayout.CENTER);

        leftChartPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(213, 213, 213), 1, true));
        leftChartPanel.setForeground(new java.awt.Color(205, 220, 234));

        javax.swing.GroupLayout leftChartPanelLayout = new javax.swing.GroupLayout(leftChartPanel);
        leftChartPanel.setLayout(leftChartPanelLayout);
        leftChartPanelLayout.setHorizontalGroup(
            leftChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 393, Short.MAX_VALUE)
        );
        leftChartPanelLayout.setVerticalGroup(
            leftChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(leftChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightElementsGridPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rightElementsGridPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                    .addComponent(leftChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void propertiesListPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_propertiesListPropertyChange
        // TODO add your handling code here:
        SysP.SysP("zmiana zawartości listy właściwości taksonomii");
    }//GEN-LAST:event_propertiesListPropertyChange

    private void graphLinesCrossingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphLinesCrossingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_graphLinesCrossingActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("../data/"));
        fileChooser.setFileFilter(FileChooserHelper.FileChooserFilter());

        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            String plik = fileChooser.getSelectedFile().getAbsolutePath();
            
        }
    }//GEN-LAST:event_openButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Generator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList atributesList;
    private javax.swing.JPanel attribPanel;
    private javax.swing.JButton combineAttribs;
    private javax.swing.JRadioButton graphLinesCrossing;
    private javax.swing.JRadioButton graphLinesNotCrossing;
    private javax.swing.ButtonGroup graphObjectsPlacement;
    private javax.swing.JPanel graphPropertiesPanel;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel leftChartPanel;
    private javax.swing.JButton openButton;
    private javax.swing.JPanel openSaveButtonPanel;
    private javax.swing.JList propertiesList;
    private javax.swing.JPanel propertyPanel;
    private javax.swing.JPanel rightElementsGridPanel;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
